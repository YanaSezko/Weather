{"version":3,"sources":["Components/WeatherDisplay.jsx","App.js","index.js"],"names":["WeatherDisplay","state","weatherData","name","this","props","fetch","then","res","json","setState","weather","iconUrl","icon","description","src","alt","main","temp","temp_max","temp_min","wind","speed","Component","PLACES","App","activePlace","className","map","place","index","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"oNAEqBA,G,kNACnBC,MAAQ,CACNC,YAAa,M,kEAGM,IAAD,OACZC,EAAOC,KAAKC,MAAMF,KAIxBG,MAHY,qDACVH,EACA,gEACSI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACtC,EAAKC,SAAS,CAAER,YAAaO,S,+BAM/B,IAAMP,EAAcE,KAAKH,MAAMC,YAC/B,IAAKA,EAAa,OAAO,wCACzB,IAAMS,EAAUT,EAAYS,QAAQ,GAC9BC,EAAU,mCAAqCD,EAAQE,KAAO,OACpE,OACE,6BACM,2EACYX,EAAYC,KAAK,6BAAMQ,EAAQG,YACzC,yBAAKC,IAAKH,EAASI,IAAKd,EAAYY,eAEtC,0EAAaZ,EAAYe,KAAKC,KAA9B,QACA,wGAAkBhB,EAAYe,KAAKE,SAAnC,QACA,kGAAiBjB,EAAYe,KAAKG,SAAlC,QACD,+GAAoBlB,EAAYmB,KAAKC,MAArC,uB,GA9BiCC,cCGtCC,EAAS,CAAC,UAAW,OAAQ,SAAU,QAAS,UAAU,YAE3CC,E,4MACnBxB,MAAQ,CACNyB,YAAa,G,uDAGL,IAAD,OACDA,EAActB,KAAKH,MAAMyB,YAC/B,OACE,yBAAKC,UAAU,OAEZH,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,4BACEC,IAAKD,EACLE,QAAS,WACP,EAAKtB,SAAS,CAAEgB,YAAaI,MAE5BD,MAIP,kBAAC,EAAD,CACEE,IAAKL,EACLvB,KAAMqB,EAAOE,U,GAtBUH,a,MCDjCU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.56b8d4e2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport default class WeatherDisplay extends Component {\r\n  state = {\r\n    weatherData: null\r\n  };\r\n  \r\n  componentDidMount() {\r\n    const name = this.props.name;\r\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n      name +\r\n      \"&appid=94737880558d647a06e637fcc697bf33&units=metric&lang=ru\";\r\n    fetch(URL).then(res => res.json()).then(json => {\r\n      this.setState({ weatherData: json });\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const weatherData = this.state.weatherData;\r\n    if (!weatherData) return <div>Loading</div>;\r\n    const weather = weatherData.weather[0];\r\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\r\n    return (\r\n      <div>\r\n            <h1>\r\n              В городе {weatherData.name}<br/>{weather.description} \r\n              <img src={iconUrl} alt={weatherData.description} />\r\n            </h1>\r\n            <p>Текущая: {weatherData.main.temp}°</p>\r\n            <p>Максимальная: {weatherData.main.temp_max}°</p>\r\n            <p>Минимальная: {weatherData.main.temp_min}°</p>\r\n           <p>Скорость ветра: {weatherData.wind.speed} м/с</p>\r\n          </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport WeatherDisplay from './Components/WeatherDisplay';\n\n\nconst PLACES = [\"Kharkiv\", \"Kiev\", \"Moscow\", \"Minsk\", \"\tKerch\", \"\tLozova\"];\n\nexport default class App extends Component {\n  state = {\n    activePlace: 0,\n  };\n\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">       \n     \n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }} >\n              {place}\n          </button>\n        ))}\n\n        <WeatherDisplay\n          key={activePlace}\n          name={PLACES[activePlace]} />\n      </div>\n    );\n  }\n} \n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}