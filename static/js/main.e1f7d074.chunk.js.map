{"version":3,"sources":["Components/WeatherDisplay.jsx","App.js","index.js"],"names":["PLACES","name","city","WeatherDisplay","state","weatherData","this","props","fetch","then","res","json","setState","weather","iconUrl","icon","description","src","alt","main","temp","temp_max","temp_min","wind","speed","Component","App","activePlace","className","map","place","index","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,G,MAAS,CACpB,CAAEC,KAAM,2BAAQC,KAAM,QACtB,CAAED,KAAM,6CAAWC,KAAM,WACzB,CAAED,KAAM,iCAASC,KAAM,SACvB,CAAED,KAAM,uCAAUC,KAAM,YAGLC,E,kDACjB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAa,MAHH,E,gEAMO,IAAD,OACZH,EAAOI,KAAKC,MAAML,KAGxBM,MAFY,oDACVN,EAAO,gEACEO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACtC,EAAKC,SAAS,CAAEP,YAAaM,S,+BAK7B,IAAMN,EAAcC,KAAKF,MAAMC,YAC/B,IAAKA,EAAa,OAAO,wCACzB,IAAMQ,EAAUR,EAAYQ,QAAQ,GAClCC,EAAU,mCAAqCD,EAAQE,KAAO,OACpE,OACM,6BACE,2EACYV,EAAYJ,KAAK,6BAAMY,EAAQG,YACzC,yBAAKC,IAAKH,EAASI,IAAKb,EAAYW,eAEtC,0EAAaX,EAAYc,KAAKC,KAA9B,QACA,wGAAkBf,EAAYc,KAAKE,SAAnC,QACA,kGAAiBhB,EAAYc,KAAKG,SAAlC,QACD,+GAAoBjB,EAAYkB,KAAKC,MAArC,uB,GA9BiCC,aCLvBC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKtB,MAAQ,CACbuB,YAAa,GAHD,E,qDAMJ,IAAD,OACDA,EAAcrB,KAAKF,MAAMuB,YAC/B,OACE,yBAAKC,UAAU,OACZ5B,EAAO6B,KAAI,SAACC,EAAOC,GAAR,OACV,4BACEC,IAAKD,EACLE,QAAS,WACP,EAAKrB,SAAS,CAAEe,YAAaI,MAG5BD,EAAM7B,SAGb,kBAAC,EAAD,CACE+B,IAAKL,EACLzB,KAAMF,EAAO2B,GAAazB,Y,GAvBHuB,a,MCCjCS,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e1f7d074.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport const PLACES = [\r\n  { name: \"Киев\", city: \"Kyiv\"},\r\n  { name: \"Харьков\", city: \"Kharkov\"},\r\n  { name: \"Керчь\", city: \"Kerch\"},\r\n  { name: \"Лозова\", city: \"Lozova\"}\r\n  ];\r\n\r\nexport default class WeatherDisplay extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        weatherData: null\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      const city = this.props.city;\r\n      const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\r\n        city + \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=metric&lang=ru\";\r\n      fetch(URL).then(res => res.json()).then(json => {\r\n        this.setState({ weatherData: json });\r\n      });\r\n    }\r\n\r\n    render() {\r\n        const weatherData = this.state.weatherData;\r\n        if (!weatherData) return <div>Loading</div>;\r\n        const weather = weatherData.weather[0];\r\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\r\n    return (\r\n          <div>\r\n            <h1>\r\n              В городе {weatherData.name}<br/>{weather.description} \r\n              <img src={iconUrl} alt={weatherData.description} />\r\n            </h1>\r\n            <p>Текущая: {weatherData.main.temp}°</p>\r\n            <p>Максимальная: {weatherData.main.temp_max}°</p>\r\n            <p>Минимальная: {weatherData.main.temp_min}°</p>\r\n           <p>Скорость ветра: {weatherData.wind.speed} м/с</p>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport WeatherDisplay, { PLACES } from './Components/WeatherDisplay';\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n    activePlace: 0,\n    };\n  }\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">\n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n              {place.name}\n          </button>\n        ))}\n        <WeatherDisplay\n          key={activePlace}\n          city={PLACES[activePlace].city}\n       />\n      </div>\n    );\n  }\n}\n\n\n\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}