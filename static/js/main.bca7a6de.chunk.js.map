{"version":3,"sources":["Components/WeatherDisplay.jsx","App.js","index.js"],"names":["WeatherDisplay","state","weatherData","city","this","props","fetch","then","res","json","setState","weather","iconUrl","icon","name","description","src","alt","main","temp","temp_max","temp_min","wind","speed","Component","PLACES","App","activePlace","className","map","place","index","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"oNAEqBA,G,wDACjB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAa,MAHH,E,gEAMO,IAAD,OACZC,EAAOC,KAAKC,MAAMF,KAGxBG,MAFY,oDACVH,EAAO,gEACEI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACtC,EAAKC,SAAS,CAAER,YAAaO,S,+BAK7B,IAAMP,EAAcE,KAAKH,MAAMC,YAC/B,IAAKA,EAAa,OAAO,wCACzB,IAAMS,EAAUT,EAAYS,QAAQ,GAClCC,EAAU,mCAAqCD,EAAQE,KAAO,OACpE,OACM,6BACE,2EACYX,EAAYY,KAAK,6BAAMH,EAAQI,YACzC,yBAAKC,IAAKJ,EAASK,IAAKf,EAAYa,eAEtC,0EAAab,EAAYgB,KAAKC,KAA9B,QACA,wGAAkBjB,EAAYgB,KAAKE,SAAnC,QACA,kGAAiBlB,EAAYgB,KAAKG,SAAlC,QACD,+GAAoBnB,EAAYoB,KAAKC,MAArC,uB,GA9BiCC,cCItCC,EAAS,CACb,CAAEX,KAAM,2BAAQX,KAAM,QACtB,CAAEW,KAAM,6CAAWX,KAAM,WACzB,CAAEW,KAAM,iCAASX,KAAM,SACvB,CAAEW,KAAM,uCAAUX,KAAM,WAGLuB,E,kDACnB,aAAe,IAAD,8BACZ,gBACKzB,MAAQ,CACb0B,YAAa,GAHD,E,qDAMJ,IAAD,OACDA,EAAcvB,KAAKH,MAAM0B,YAC/B,OACE,yBAAKC,UAAU,OACZH,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,4BACEC,IAAKD,EACLE,QAAS,WACP,EAAKvB,SAAS,CAAEiB,YAAaI,MAG5BD,EAAM3B,SAGb,kBAAC,EAAD,CAAgB6B,IAAKL,EAAaxB,KAAMsB,EAAOE,GAAaxB,Y,GArBnCqB,a,MCPjCU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bca7a6de.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class WeatherDisplay extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        weatherData: null\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      const city = this.props.city;\r\n      const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\r\n        city + \"&appid=94737880558d647a06e637fcc697bf33&units=metric&lang=ru\";\r\n      fetch(URL).then(res => res.json()).then(json => {\r\n        this.setState({ weatherData: json });\r\n      });\r\n    }\r\n\r\n    render() {\r\n        const weatherData = this.state.weatherData;\r\n        if (!weatherData) return <div>Loading</div>;\r\n        const weather = weatherData.weather[0];\r\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\r\n    return (\r\n          <div>\r\n            <h1>\r\n              В городе {weatherData.name}<br/>{weather.description} \r\n              <img src={iconUrl} alt={weatherData.description} />\r\n            </h1>\r\n            <p>Текущая: {weatherData.main.temp}°</p>\r\n            <p>Максимальная: {weatherData.main.temp_max}°</p>\r\n            <p>Минимальная: {weatherData.main.temp_min}°</p>\r\n           <p>Скорость ветра: {weatherData.wind.speed} м/с</p>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport WeatherDisplay from './Components/WeatherDisplay';\n\n\n\nconst PLACES = [\n  { name: \"Киев\", city: \"Kyiv\"},\n  { name: \"Харьков\", city: \"Kharkov\"},\n  { name: \"Керчь\", city: \"Kerch\"},\n  { name: \"Лозова\", city: \"Lozova\"}\n  ];\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n    activePlace: 0,\n    };\n  }\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">\n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n              {place.city}\n          </button>\n        ))}\n        <WeatherDisplay key={activePlace} city={PLACES[activePlace].city}\n       />\n      </div>\n    );\n  }\n}\n\n\n\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}